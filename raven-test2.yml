---
# Web Port Service (perhaps Nginx)
apiVersion: v1
kind: Service
metadata:
  labels:
    kubernetes.io/cluster-service: 'true'
    kubernetes.io/name: monitoring-raven
  name: raven-example-web
spec:
  # NodePort type allows to expose service outside the cluster
  type: LoadBalancer
  loadBalancerIP: 10.108.5.2  # test IP
  selector:
    app: tworavens
  ports:
    - name: http
      port: 80
      targetPort: 80
---
apiVersion: v1
kind: Pod
metadata:
  name: tworavensweb
  labels:
    app: tworavens
spec:
  restartPolicy: Always
  volumes:
    - name: ravens-volume
      emptyDir: {}
    #- name: ravens-volume
    #  # This GCE PD must already exist.
    #  gcePersistentDisk:
    #    pdName: raven-disk-01
    #    fsType: ext4
  containers:
  # -------------------------
  # 1 of 3: Ravens nginx
  # -------------------------
  - name: ravens-nginx
    image: tworavens/ravens-nginx:latest
    resources:
      requests:
        memory: 256Mi
        cpu: 1
    ports:
      - containerPort: 80
        name: http
        protocol: TCP
  # -------------------------
  # 2 of 3: TA3 main
  # -------------------------
  - name: ta3-main
    image: tworavens/ravens-main:latest
    command: ["gce_start.sh"]
    resources:
      requests:
        memory: 512Mi
        cpu: 1
    ports:
      - containerPort: 8080
        name: http
        protocol: TCP
    # current tworavens has a mount at /ravens_volume
    volumeMounts:
      - mountPath: "/ravens_volume"
        name: "ravens-volume"
        readOnly: false
    # environment variables passed to container
    env:
      # CONFIG_JSON_PATH
      - name: CONFIG_JSON_PATH
        value: /ravens_volume/config_185_baseball.json
      # Turn off test mode
      - name: TA2_STATIC_TEST_MODE
        value: "True"
      # Reference to the gRPC server using the pod name and TA2 port
      #- name: TA2_TEST_SERVER_URL
      #  value: "raven1:45042"
      # Url to TA3 R/rook web service
      - name: R_DEV_SERVER_BASE
        value: "http://localhost:8000/custom/"
  # -------------------------
  # 3 of 3: rook
  # -------------------------
  - name: rook-service
    image: tworavens/ravens-r-service:latest
    resources:
      requests:
        memory: 512Mi
        cpu: 1
    # same mounts as ta3-main and ta2-main
    volumeMounts:
      # ravens volume shared w/ ta3-main
      - mountPath: "/ravens_volume"
        name: "ravens-volume"
        readOnly: false
    # web port
    ports:
      - containerPort: 8000
        name: http
        protocol: TCP
    # environment variables passed to container
    env:
      # Also set to "yes" in the Dockefile
      - name: ROOK_USE_PRODUCTION_MODE
        value: "yes"
